[project]
name = "smart-geocubes"
dynamic = ["version"]
description = "A high-performance library for intelligent loading and caching of remote geospatial raster data, built with xarray and zarr."
readme = "README.md"
authors = [{ name = "relativityhd", email = "tobiashoelzer@hotmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "geopandas>=1.0.1",
    "icechunk>=0.2.5,<0.3",
    "numcodecs>=0.15.0,<0.16",
    "numpy>=1.20,<3",
    "odc-geo>=0.4.5,<0.5",
    "stopuhr>=0.0.3",
    "xarray>=2025.1.1",
    "zarr>=3,<4",
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[project.urls]
Documentation = "https://relativityhd.github.io/smart-geocubes/latest/"
Repository = "https://github.com/relativityhd/smart-geocubes"
Issues = "https://github.com/relativityhd/smart-geocubes/issues"


[project.optional-dependencies]
stac = [
    "odc-stac>=0.3.11",
    "pyarrow>=19.0.1",
    "pystac>=1.12.1",
    "pystac-client>=0.8.5",
    "xpystac>=0.1.3",
]
gee = [
    "earthengine-api>=1.1.5",
    "rasterio>=1.4.3",
    "rioxarray>=0.18.2",
    "xee>=0.0.20",
]
dask = ["bokeh>=3.6.3", "dask>=2025.1.0", "distributed>=2025.1.0"]
viz = [
    "cartopy>=0.24.1",
    "folium>=0.19.4",
    "mapclassify>=2.8.1",
    "matplotlib>=3.10.0",
]


[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.wheel]
packages = ["src/smart_geocubes"]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"

[dependency-groups]
dev = ["ipykernel>=6.29.5", "ipywidgets>=8.1.5", "rich>=13.9.4", "ruff>=0.9.5"]
tests = ["pytest>=8.3.4"]
docs = [
    "mike>=2.1.3",
    "mkdocs>=1.6.1",
    "mkdocs-api-autonav>=0.2.1",
    "mkdocs-git-committers-plugin-2>=2.5.0",
    "mkdocs-git-revision-date-localized-plugin>=1.4.2",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material[imaging]>=9.6.7",
    "mkdocstrings[python]>=0.28.2",
]


# ==============================================================================
# Ruff Configuration
# ==============================================================================
[tool.ruff]
line-length = 120
indent-width = 4  # This is the default

[tool.ruff.lint]
# Default selected Rules are F, E4, E7 and E9 (all stable)
# We also enable preview Rules from E
# See https://docs.astral.sh/ruff/rules/ which rules do what
# F: Pyflakes
# E, W: Pycodestyle
# C: McCabe (code complexity)
# I: isort (import sorting)
# N: pip8-naming (naming conventions)
# D: pydocstyle (docstring formatting) <- this should help us to write documentation
# UP: pyupgrade <- this should help writing up-to-date code
# PD: pandas-vet <- this should help writing better pandas code
# FLY: flynt <- write f-strings
# NPY: numpy <- this should help writing better numpy code
# FURB: refurb <- this should help writing up-to-date code
# DOC: pydoclint <- this should help writing better docstrings
# RUF: ruff
preview = true
select = [
    "F",
    "E",
    "W",
    "C",
    "I",
    "N",
    "D",
    "UP",
    "PD",
    "FLY",
    "NPY",
    "FURB",
    "DOC",
    "RUF",
]


# Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{test,tests,docs,tools}/*" = ["E402", "D1"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["test_*"]

[tool.ruff.lint.pyflakes]
allowed-unused-imports = ["rioxarray", "odc.geo.xr", "xee"]
